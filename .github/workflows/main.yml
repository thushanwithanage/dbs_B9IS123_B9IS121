name: Deploy Infrastructure and Application

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: "us-east-1"
  STACK_NAME: "webapp-infra"
  ECR_REPO_NAME: "webapp"

jobs:
  deploy:
    name: Deploy Infrastructure and Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy infrastructure
        id: deploy-cfn
        run: |
          aws cloudformation deploy \
            --template-file infra.yml \
            --stack-name ${{ env.STACK_NAME }} \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides KeyPairName=${{ secrets.KEY_PAIR_NAME }}

      - name: Get stack outputs
        id: get-outputs
        run: |
          EC2_IP=$(aws cloudformation describe-stacks \
            --stack-name ${{ env.STACK_NAME }} \
            --query "Stacks[0].Outputs[?OutputKey=='EC2PublicIP'].OutputValue" \
            --output text)
          EC2_DNS=$(aws cloudformation describe-stacks \
            --stack-name ${{ env.STACK_NAME }} \
            --query "Stacks[0].Outputs[?OutputKey=='EC2PublicDNS'].OutputValue" \
            --output text)
          ECR_URI=$(aws cloudformation describe-stacks \
            --stack-name ${{ env.STACK_NAME }} \
            --query "Stacks[0].Outputs[?OutputKey=='ECRRepositoryURI'].OutputValue" \
            --output text)
          EC2_INSTANCE_ID=$(aws cloudformation describe-stacks \
            --stack-name ${{ env.STACK_NAME }} \
            --query "Stacks[0].Outputs[?OutputKey=='EC2InstanceId'].OutputValue" \
            --output text)

          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV
          echo "EC2_DNS=$EC2_DNS" >> $GITHUB_ENV
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          echo "EC2_INSTANCE_ID=$EC2_INSTANCE_ID" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.ECR_URI }}:${{ github.sha }} .
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_URI }}
          docker push ${{ env.ECR_URI }}:${{ github.sha }}

      - name: Deploy to EC2 via SSM
        run: |
          aws ssm send-command \
            --instance-ids ${{ env.EC2_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters '{
              "commands": [
                "aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_URI }}",
                "docker stop webapp || true",
                "docker rm webapp || true",
                "docker pull ${{ env.ECR_URI }}:${{ github.sha }}",
                "docker run -d -p 3000:3000 --name webapp ${{ env.ECR_URI }}:${{ github.sha }}"
              ]
            }' \
            --comment "Deploying webapp container"
      
      - name: Verify deployment
        run: |
          curl --retry 5 --retry-delay 10 --max-time 5 \
            http://${{ env.EC2_IP }}:3000